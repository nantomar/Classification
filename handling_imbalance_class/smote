import numpy as np
from sklearn.datasets import make_classification
from sklearn.model_selection import train_test_split
from imblearn.over_sampling import SMOTE

# Generate a sample dataset with an imbalanced class distribution
X, y = make_classification(n_samples=1000, n_features=10, weights=[0.8, 0.1, 0.1], random_state=42)

# Split the dataset into training and testing sets
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)

# Check the class distribution
print("Class distribution in the training set:")
print(np.unique(y_train, return_counts=True))

# Apply SMOTE to oversample the minority classes
smote = SMOTE(random_state=42)
X_train_resampled, y_train_resampled = smote.fit_resample(X_train, y_train)

# Check the class distribution after resampling
print("\nClass distribution in the resampled training set:")
print(np.unique(y_train_resampled, return_counts=True))

Class distribution in the training set:
(array([0, 1, 2]), array([640, 80, 80]))

Class distribution in the resampled training set:
(array([0, 1, 2]), array([640, 640, 640]))
